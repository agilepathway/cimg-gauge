version: 2.1

orbs:
  shellcheck: circleci/shellcheck@1.3.15

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: agilepathway/cimg-gauge
    docker:
      - image: circleci/buildpack-deps:stretch
  go:
    docker:
      - image: cimg/go:1.14

workflows:
  version: 2
  build-tags:
    jobs:
      - shellcheck/check
      - compile-mage-scripts
      - build-image:
          requires:
            - compile-mage-scripts
      - tag-and-conditionally-publish-image:
          requires:
            - build-image
            
jobs:
  compile-mage-scripts:
    working_directory: ~/agile-pathway-co-uk
    executor: go
    steps:
      - checkout
      - run:
          name: Install Mage
          command: ./scripts/install-mage.sh
      - run:
          name: Install check Gauge Version executable
          command: cd go-scripts/src && mage -compile ../bin/gauge-version -goos linux -goarch amd64
      - persist_to_workspace:
          root: .
          paths:
            - go-scripts/bin/*
  build-image:
    executor: docker-publisher
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  tag-and-conditionally-publish-image:
    executor: docker-publisher
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: ./scripts/tag-and-conditionally-publish-image.sh
      - store_artifacts:
          path: /tmp/tags
          destination: docker/tags
      - store_artifacts:
          path: /tmp/digest
          destination: docker/digest
